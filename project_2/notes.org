* Key points
- [ ] Approaches the ordering problem as a clustering problem. It's crucial for the
  ordering to recover the "original clustering structure".
- [ ] The graphs are immutable.
- [ ] Very fast amortised random access to an edge.
- [ ] Can't decompress the graph.
- [ ] Compression to place large graphs in *main memory*
- [ ] Applies to graphs of all kinds by using intrinsic heuristics to find a good
   node ordering.
- [ ] Intrinsic vs extrinsic heuristics.
  - [ ] By definiiton, extrinsic properties are features of each specific kind of network, while
    intrinsic properties are generally applicable.
- [ ] Why is the ordering of the nodes important?
  - [ ] Algorithms become sensitive to the way nodes are ordered because they rely
    on the *similarity* and *locality* properties.
    - [ ] What are they?
- [ ] Problem is NP-Hard. Why?
- [ ] LLP is coordinate-free.
- [ ] LLP is parameter-free.
- [ ] LLP was combined with BV.
- [ ] Highly parallel.

* LLP
** 1. What is it?
A coordinate-free ordering algorithm (not a compression algorithm).
** 2. What does it (try to) accomplish?
Exploit intrinsic characteristics to reorder very large immutable graphs
in order to code them into coordinate-free compressed data structures that fit
in main memory and provide very fast amortised random access to their edges.
** 3. Why do we need it?
Because better compression schemes allow for larger graphs to fit in main
memory. Most graph mining
** 4. How does it compare to other approaches to the same problem?
** 5. How does it work?

* Doubts
- [ ] How can we compress the graph if it can't be placed in main memory in the
  first place?
- [ ] Whats the complexity of edge access?
- [ ] What is overdecomposition?

* Cool stuff
** Compressed Row Storage
Maybe it would be cool to give an overview of compressed row storage to give an
intro to graph compression and, mainly, why the ordering of the nodes is important.

*Doesn't work* CRS doesn't depend on the ordering of nodes.
** Gephi
Maybe we could use Gephi to generate some graph figures, if needed.
